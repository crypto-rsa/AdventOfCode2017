using System.Diagnostics;
using System.Linq;

namespace Advent_Of_Code_2017
{
    public class Day1 : IDay
    {
        public const string Input = "8239366453455812726956773185134594918346411298443937426725535444391263" +
            "14399846773234845535593355348931499496184839582118817689171948635864427852215325421433717458975" +
            "77136952213876624822596324216865897532635478541525297429431713851114182622686636455576111717876" +
            "45434358998867114263196754436798291812574969662194358316215655196679898987258366396266816458217" +
            "148614431418934276723847167327658848447724333747981859557413111163658996598336342379388781813673" +
            "172186355396673573642957547448295958429627735245842254279694674676116415918348767698297192481366" +
            "1314735129853488556314411433621196167439291218173577385163429822745415788524176915681178761189734" +
            "9965331474217223461176896643242975397227859696554492996937235423272549348349528559432214521551656" +
            "97113685997223285412626234938125442459734887444773654572226195787127593575676418437899416742798381" +
            "17166754762578585564647556774787251465887471478573752936757115757471324717279337735125713684673861" +
            "51966568598964631331428869762151853634362356935751298121849281442128796517663482391226174256395515" +
            "16636151444262494418125595212452481526886413196915143388872121359526792732575956213273258625243845" +
            "65695569926858965175652577874646737182218177839296916268764464231343317493273223675714325328572352" +
            "14364221471769481667118117729326429556357572421333798517168997863151927281418238491791975399357393" +
            "494751913155219862399959646993428921878798119215675548847845477994836744929918954159722827194721564" +
            "1215323154596114331573849945433327737968621652431833784647315467874981748447817811395719842722358728" +
            "66886275879944921329959736315296733981313643956576956851762149275521949177991988236529475373595217665" +
            "11243472774423578985285276567518934275369537721937479154855478667147373312495194677953184747975536336" +
            "328844828162218373654549437234478511231274969416748399673838435129389914913685772854597744276348979969" +
            "3492319549773328626918874718387697878235744154491677922317518952687439655962477734559232755624943644966" +
            "22797361778818221362189957939132439938614642342726287443799257957385858918357185457786145975853434853355" +
            "392516794713935181951179882997737121585663721522183892461264478549893626384948951989654881125462897664239" +
            "1428413984281758771868781714266261781359762798";

        public override string ToString() => "Day 1";

        public string Solve( string input )
        {
            var digits = input.Select( c => int.Parse( c.ToString() ) ).ToArray();
            int sum = Enumerable.Range( 0, digits.Length ).Where( i => digits[i] == digits[(i + 1) % digits.Length] ).Sum( i => digits[i] );

            return sum.ToString();
        }

        public string SolveAdvanced( string input )
        {
            var digits = input.Select( c => int.Parse( c.ToString() ) ).ToArray();
            int offset = digits.Length / 2;
            int sum = Enumerable.Range( 0, digits.Length ).Where( i => digits[i] == digits[(i + offset) % digits.Length] ).Sum( i => digits[i] );

            return sum.ToString();
        }
    }
}
